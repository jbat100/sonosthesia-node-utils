{"version":3,"sources":["../ts/lib/core.ts"],"names":[],"mappings":"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","file":"core.js","sourcesContent":["\r\nimport * as _ from 'underscore';\r\nimport {expect} from \"chai\";\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport * as Rx from 'rx';\r\nimport * as uuid from 'node-uuid';\r\n\r\n\r\nexport interface IConnection {\r\n\r\n    messageObservable : Rx.Observable<Message>;\r\n\r\n    sendJSON(message : any);\r\n\r\n    sendMessage(message : Message);\r\n\r\n}\r\n\r\nexport enum ConnectorState {\r\n    None,\r\n    Started,\r\n    Stopped,\r\n    Error\r\n}\r\n\r\n// not sure this a good idea, waiting to have played with Rx a bit, until then, sticking with event emitters\r\n\r\nexport interface IConnector {\r\n\r\n    emitter : EventEmitter;\r\n\r\n    // not sure this a good idea, waiting to have played with Rx a bit, until then, sticking with event emitters\r\n    //stateObservable : Rx.Observable<ConnectorState>;\r\n    //connectionObservable : Rx.Observable<IConnection>;\r\n    //disconnectionObservable : Rx.Observable<IConnection>;\r\n\r\n}\r\n\r\n\r\n/**\r\n *\r\n */\r\nexport class NativeClass {\r\n    static cloneInstance(instance) {\r\n        // seems too good to be true, but also seems to work...\r\n        // http://codepen.io/techniq/pen/qdZeZm\r\n        return Object.assign(Object.create(instance), instance);\r\n    }\r\n    /**\r\n     * Not really useful now that we are using typescript\r\n     * @param instance\r\n     * @param klass\r\n     * @returns {Assertion}\r\n     */\r\n    static checkInstanceClass(instance, klass) {\r\n        // seems too good to be true, but also seems to work...\r\n        // http://codepen.io/techniq/pen/qdZeZm\r\n        return expect(instance).to.be.instanceof(klass);\r\n    }\r\n    get tag() { return this.constructor.name; }\r\n}\r\n\r\nexport class NativeEmitterClass extends EventEmitter {\r\n    get tag() { return this.constructor.name; }\r\n}\r\n\r\n\r\nexport class MessageContentParser extends NativeClass {\r\n\r\n    parse(type : string, content : any) : any {\r\n        throw new Error('not implemented');\r\n    }\r\n\r\n}\r\n\r\nexport class Message extends NativeClass {\r\n\r\n    private _raw: string;\r\n\r\n    static checkJSON(obj : any) {\r\n        expect(obj.type).to.be.a('string');\r\n        expect(obj.date).to.be.a('string');\r\n    }\r\n\r\n    static newFromJSON(obj : any, parser : MessageContentParser) : Message {\r\n        this.checkJSON(obj);\r\n        return new this(obj.type, new Date(<string>obj.date), parser.parse(obj.type, obj.content));\r\n    }\r\n\r\n    constructor(private _type : string, private _date : Date, private _content: any) {\r\n        super();\r\n    }\r\n\r\n    get type() : string { return this._type; }\r\n    get date() : Date { return this._date; }\r\n    get content() : any { return this._content; }\r\n    get raw() : string {\r\n        if (!this._raw)\r\n            this._raw = JSON.stringify(this.toJSON());\r\n        return this._raw;\r\n    }\r\n\r\n    toJSON() : any {\r\n        return {\r\n            type: this.type,\r\n            date: this.date.toISOString(),\r\n            content: this.content.toJSON()\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n *  Declarable can be destroyed by new declarations or disconnections\r\n */\r\nexport class Declarable extends NativeClass {\r\n\r\n    private _identifier : string;\r\n    private _live = true;\r\n    private _info : any;\r\n\r\n    static create(identifier:string, info:any) {\r\n        const instance = new this(identifier);\r\n        instance.update(info);\r\n        return instance;\r\n    }\r\n\r\n    constructor(identifier:string) {\r\n        super();\r\n        this._identifier = identifier;\r\n        this._live = true;\r\n    }\r\n\r\n    get identifier() : string { return this._identifier; }\r\n    get live() : boolean { return this._live; }\r\n    set live(value : boolean) {\r\n        this._live = value;\r\n    }\r\n\r\n    update(info:any) {\r\n        this._info = info;\r\n        this._applyInfo(info);\r\n    }\r\n\r\n    createReference() {\r\n        throw new Error('unimplemented');\r\n    }\r\n\r\n    _applyInfo(info:any) {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Abstract class for info (usually declared by JSON network interfaces)\r\n */\r\nexport class Info extends NativeClass {\r\n\r\n    private _identifier : string;\r\n\r\n    static newFromJSON(obj : any) {\r\n        const instance = new this();\r\n        instance.applyJSON(obj);\r\n        return instance;\r\n    }\r\n\r\n    get identifier() : string { return this._identifier; }\r\n\r\n    applyJSON(obj:any) {\r\n        expect(obj.identifier).to.be.a('string');\r\n        this._identifier = obj.identifier;\r\n    }\r\n\r\n    toJSON() : any {\r\n        return _.pick(this, 'identifier');\r\n    }\r\n\r\n}\r\n\r\nexport class Selection {\r\n\r\n    private _identifier : string;\r\n    private _valid : boolean;\r\n\r\n    constructor() {\r\n        this._identifier = null;\r\n        this._valid = false;\r\n    }\r\n\r\n    get identifier() : string { return this._identifier; }\r\n    set identifier(identifier : string) { this._identifier = identifier; }\r\n    get valid() : boolean { return this._valid; }\r\n    set valid(valid : boolean) { this._valid = valid; }\r\n\r\n}\r\n\r\nexport class Range extends NativeClass {\r\n\r\n    static newFromJSON(obj) {\r\n        expect(obj).to.be.an('object');\r\n        const instance = new this(+obj.min, +obj.max);\r\n        instance.check();\r\n        return instance;\r\n    }\r\n\r\n    constructor(private _min : number, private _max : number) {\r\n        super();\r\n    }\r\n\r\n    get min() : number { return this._min; }\r\n    set min(min : number) { this._min = min; }\r\n    get max() : number { return this._max; }\r\n    set max(max : number) { this._max = max; }\r\n\r\n    check() { if (this._min > this._max) throw new Error('min should be less than max'); }\r\n\r\n    toJSON() {\r\n        return _.pick(this, 'min', 'max');\r\n    }\r\n\r\n}\r\n\r\nexport class GUID extends NativeClass {\r\n\r\n    static generate() : string {\r\n        return uuid.v4();\r\n    }\r\n\r\n}"]}