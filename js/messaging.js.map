{"version":3,"sources":["../ts/messaging.ts"],"names":[],"mappings":"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","file":"messaging.js","sourcesContent":["\r\nimport * as _ from \"underscore\";\r\nimport { expect } from 'chai';\r\n\r\nimport { NativeClass, MessageContentParser } from '../core/core';\r\nimport { ComponentInfo } from './component';\r\n\r\n\r\nexport class Parameters extends NativeClass {\r\n\r\n    private _values = {};\r\n\r\n    static newFromJson(obj : any) {\r\n        expect(obj).to.be.an('object');\r\n        const parameters = new this();\r\n        _.each(obj, (value, key) => {\r\n            expect(key).to.be.a('string');\r\n            if (typeof value === 'number') value = [value];\r\n            if (!_.isArray(value)) throw new Error('value should be number or array');\r\n            parameters.setParameter(key, value);\r\n        });\r\n        return parameters;\r\n    }\r\n\r\n    getKeys() : string[] {\r\n        return _.keys(this._settings);\r\n    }\r\n\r\n    setParameter(key : string, value : number[]) {\r\n        if (!key) throw new Error('invalid key');\r\n        this._values[key] = value;\r\n    }\r\n\r\n    getParameter(key : string) : number[]  {\r\n        if (!_.has(this._values, key)) throw new Error('unknown key');\r\n        return this._values[key];\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class MessageContent extends NativeClass {\r\n\r\n}\r\n\r\nexport class ComponentMessageContent extends MessageContent {\r\n\r\n    static newFromJson(obj : any) {\r\n        expect(obj.component).to.be.an('object');\r\n        const component : ComponentInfo = ComponentInfo.newFromJSON(obj.component) as ComponentInfo;\r\n        return new this(component);\r\n    }\r\n\r\n    constructor(private _component : ComponentInfo) {\r\n        super();\r\n    }\r\n\r\n    get component() : ComponentInfo { return this._component; }\r\n\r\n}\r\n\r\n/**\r\n * Abstract base for control, create and destroy messages\r\n */\r\n\r\nexport class ChannelMessageContent extends MessageContent {\r\n\r\n    static newFromJson(obj : any) {\r\n        expect(obj.component).to.be.an('object');\r\n        expect(obj.component).to.be.a('string');\r\n        expect(obj.channel).to.be.a('string');\r\n        expect(obj.object).to.be.a('string');\r\n        return new this(obj.component, obj.channel, obj.object, Parameters.newFromJson(obj.parameters));\r\n    }\r\n\r\n    constructor(private _component : string,\r\n                private _channel : string,\r\n                private object : string,\r\n                private parameters : Parameters) {\r\n\r\n        super();\r\n    }\r\n\r\n    get component() : string { return this._component; }\r\n\r\n    get channel() : string { return this._channel; }\r\n\r\n    get object() : string { return this._object; }\r\n\r\n    get parameters() : Parameters { return this._parameters; }\r\n\r\n}\r\n\r\nexport class ControlMessageContent extends ChannelMessageContent { }\r\n\r\n/**\r\n * Object cannot be null\r\n */\r\nexport class ObjectMessageContent extends ChannelMessageContent {\r\n\r\n    constructor(_component : string, _channel : string, object : string, parameters : Parameters) {\r\n        expect(object).to.be.ok;\r\n        super(component, channel, object, parameters);\r\n    }\r\n\r\n}\r\n\r\nexport class CreateMessageContent extends ObjectMessageContent { }\r\n\r\nexport class DestroyMessageContent extends ObjectMessageContent { }\r\n\r\n\r\n\r\nexport enum HubMessageType {\r\n    component,\r\n    control,\r\n    create,\r\n    destroy\r\n}\r\n\r\nexport class HubMessageContentParser extends MessageContentParser {\r\n\r\n    private _contentClasses = {\r\n        'component' : ComponentMessage,\r\n        'control' : ControlMessage,\r\n        'create': CreateMessage,\r\n        'destroy': DestroyMessage\r\n    };\r\n\r\n    parse(type : string, content : any) : any {\r\n        if (!_.has(MessageClasses, type)) throw new Error('unsuported message type : ' + type);\r\n        return MessageContentClasses[type].newFromJson(obj);\r\n    }\r\n\r\n}"]}