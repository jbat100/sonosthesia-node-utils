{"version":3,"sources":["../ts/hub.ts"],"names":[],"mappings":";;;;;;AAAA,8BAAgC;AAChC,qBAAuB;AAEvB,qCAAkD;AAGlD,yCAAoD;AACpD,yCAA6C;AAG7C;IAAgC,8BAAW;IAMvC,oBAAoB,cAA8B,EAAU,UAAuB;QAAnF,YACI,iBAAO,SACV;QAFmB,oBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAU,GAAV,UAAU,CAAa;QAJ3E,2BAAqB,GAAG,IAAI,mCAAuB,EAAE,CAAC;QAEtD,uBAAiB,GAAG,IAAI,4BAAgB,EAAE,CAAC;;IAInD,CAAC;IAED,sBAAI,qCAAa;aAAjB,cAAsB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;;OAAA;IAEnD,sBAAI,iCAAS;aAAb,cAAkB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAE3C,0BAAK,GAAL;QACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;QAEpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAQ,GAAR;QACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;QAEpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAe,GAAf,UAAgB,UAAwB;QAAxC,iBAKC;QAJG,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,OAAiB;YACrD,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC;QAE9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAY,GAAZ,UAAa,UAAU;QACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAA,SAAS,IAAM,MAAM,CAAC,SAAS,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEL,iBAAC;AAAD,CArCA,AAqCC,CArC+B,kBAAW,GAqC1C;AArCY,gCAAU","file":"hub.js","sourcesContent":["import * as _ from \"underscore\";\r\nimport * as Q from \"q\";\r\n\r\nimport {NativeClass, Message} from \"../core/core\";\r\nimport {Configuration} from './configuration';\r\nimport {IConnector, IConnection} from \"../core/interface\";\r\nimport {HubMessageContentParser} from \"./messaging\";\r\nimport {ComponentManager} from \"./component\";\r\n\r\n\r\nexport class HubManager extends NativeClass {\r\n\r\n    private _messageContentParser = new HubMessageContentParser();\r\n\r\n    private _componentManager = new ComponentManager();\r\n\r\n    constructor(private _configuration : Configuration, private _connector : IConnector) {\r\n        super();\r\n    }\r\n\r\n    get configuration() { return this._configuration; }\r\n\r\n    get connector() { return this._connector; }\r\n\r\n    setup() {\r\n        return Q(null).then(() => {\r\n\r\n        });\r\n    }\r\n\r\n    teardown() {\r\n        return Q(null).then(() => {\r\n\r\n        });\r\n    }\r\n\r\n    setupConnection(connection : IConnection) {\r\n        connection.messageObservable.subscribe((message : Message) => {\r\n            message.parse(this._messageContentParser);\r\n\r\n        });\r\n    }\r\n\r\n    getComponent(identifier) {\r\n        _.find(this._components, component => { return component.identifier === identifier; });\r\n    }\r\n\r\n}"]}