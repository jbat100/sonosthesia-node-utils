{"version":3,"sources":["../ts/tools/generator.ts"],"names":[],"mappings":"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","file":"generator.js","sourcesContent":["/**\r\n * A script to help producing messages mostly as a test and debug tool for other clients\r\n */\r\n\r\nconst commandLineArgs = require('command-line-args');\r\n\r\nimport {Socket} from 'net';\r\nimport * as _  from 'underscore';\r\n\r\nimport {GUID} from '../lib/core';\r\nimport {TCPConnection} from '../lib/connector';\r\nimport {ControlMessageContent, ActionMessageContent, HubMessageContentParser} from '../lib/messaging';\r\nimport {CreateMessageContent, DestroyMessageContent} from '../lib/messaging';\r\nimport {Parameters, HubMessageType, HubMessage} from '../lib/messaging';\r\n\r\nconst iterations = 1000000;\r\nlet current = 0;\r\n\r\nconst optionDefinitions = [\r\n    { name: 'type', alias: 't', type: String },\r\n    { name: 'address', alias: 'a', type: String },\r\n    { name: 'port', alias: 'p', type: Number },\r\n    { name: 'interval', alias: 'i', type: Number },\r\n    { name: 'count', alias: 'c', type: Number }\r\n];\r\n\r\nconst options = commandLineArgs(optionDefinitions);\r\n\r\n// enter default options\r\n\r\nif (!options.type) options.type = 'control';\r\nif (!options.address) options.address = '127.0.0.1';\r\nif (!options.port) options.port = 3333;\r\nif (!options.interval) options.interval = 1000;\r\nif (!options.count) options.count = 10;\r\n\r\n// used in several generations\r\n\r\nconst range = 1.0;\r\nconst step = range / options.count;\r\nconst component = 'test-component';\r\nconst channel = 'test-channel';\r\nconst parameter = 'test-parameter';\r\nconst key = 'test-key';\r\n// no need for instance identifier, they should be auto generated guids\r\n\r\n\r\n// generators\r\n\r\nfunction* controlGenerator() {\r\n    let i = 0;\r\n    let val = 0.0;\r\n    while(i < iterations) {\r\n        val = val + step;\r\n        if (val > 1.0) val = 0.0;\r\n        const parameters = Parameters.newFromJSON({parameter : val});\r\n        const content = new ControlMessageContent(component, channel, null, null, parameters);\r\n        const message = new HubMessage(HubMessageType.Control, null, content);\r\n        i++;\r\n        yield message;\r\n    }\r\n}\r\n\r\nfunction* actionGenerator() {\r\n    let i = 0;\r\n    while(i < iterations) {\r\n        i++;\r\n        const content = new ActionMessageContent(component, channel, null, key, null);\r\n        const message = new HubMessage(HubMessageType.Action, null, content);\r\n        yield message;\r\n    }\r\n}\r\n\r\nfunction* instanceGenerator() {\r\n    let i = 0, content, message;\r\n    while(i < iterations) {\r\n        i++;\r\n        const instance = GUID.generate();\r\n        // create instance\r\n        content = new CreateMessageContent(component, channel, instance, null, null);\r\n        message = new HubMessage(HubMessageType.Create, null, content);\r\n        yield message;\r\n        // instance action message\r\n        content = new ActionMessageContent(component, channel, instance, key, null);\r\n        message = new HubMessage(HubMessageType.Action, null, content);\r\n        yield message;\r\n        // instance control message\r\n        const parameters = Parameters.newFromJSON({parameter : 0.5});\r\n        content = new ControlMessageContent(component, channel, instance, null, parameters);\r\n        message = new HubMessage(HubMessageType.Control, null, content);\r\n        yield message;\r\n        // destroy instance\r\n        content = new DestroyMessageContent(component, channel, instance, null, null);\r\n        message = new HubMessage(HubMessageType.Destroy, null, content);\r\n        yield message;\r\n    }\r\n}\r\n\r\n\r\nasync function generate(connection : TCPConnection, generator : any) {\r\n    // usually stopped with ctrl-c, but safeguards against the program running forever pointlessly\r\n    while (current < iterations) {\r\n        current++;\r\n        await delay(options.interval);\r\n        const obj = generator.next();\r\n        connection.sendMessage(obj.value);\r\n        if (obj.done) break;\r\n    }\r\n}\r\n\r\nfunction delay(ms: number) { return new Promise(resolve => setTimeout(resolve, ms)); }\r\n\r\nconst generators = {\r\n    'control' : controlGenerator,\r\n    'action' : actionGenerator,\r\n    'instance' : instanceGenerator\r\n};\r\n\r\nif (!_.has(generators, options.type)) {\r\n    throw new Error('unsuported generator type : ' + options.type);\r\n}\r\n\r\nconst client = new Socket();\r\nconst parser = new HubMessageContentParser();\r\nconst generator = generators[options.type]();\r\n\r\nclient.connect(options.port, options.address, () => {\r\n    console.log('Connected');\r\n    const connection = new TCPConnection(null, client, parser);\r\n    generate(connection, generator).then(() => { console.log('done'); }).catch(err => {\r\n        console.log('Ended with error ' + err.stack);\r\n    });\r\n});\r\n\r\n\r\n"]}